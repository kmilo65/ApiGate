/**
 * Google OAuth Data Mapping
 * This file shows exactly what data Google provides and how it maps to our user model
 */

/**
 * Raw Google OAuth Response
 * This is what Google sends to NextAuth.js
 */
export const GOOGLE_OAUTH_RESPONSE = {
  // Google's unique identifier for this user
  id: "123456789012345678901",
  
  // User's full name from Google profile
  name: "John Doe",
  
  // Email address (always provided)
  email: "john.doe@gmail.com",
  
  // Email verification status
  emailVerified: "2024-01-01T00:00:00.000Z",
  
  // Profile picture URL
  image: "https://lh3.googleusercontent.com/a/default-user",
  
  // OAuth provider information
  provider: "google",
  providerAccountId: "123456789012345678901"
};

/**
 * Extended Google Profile Data (available in profile callback)
 * This contains additional Google profile information
 */
export const GOOGLE_PROFILE_DATA = {
  // Basic info (same as above)
  id: "123456789012345678901",
  name: "John Doe",
  email: "john.doe@gmail.com",
  emailVerified: "2024-01-01T00:00:00.000Z",
  image: "https://lh3.googleusercontent.com/a/default-user",
  
  // Additional Google profile data
  given_name: "John",           // First name
  family_name: "Doe",           // Last name
  locale: "en-US",              // User's locale
  picture: "https://lh3.googleusercontent.com/a/default-user", // Same as image
  verified_email: true,         // Email verification status (boolean)
  
  // Google account details
  hd: "gmail.com",              // Hosted domain (if applicable)
  sub: "123456789012345678901", // Subject identifier
  iat: 1640995200,              // Issued at timestamp
  exp: 1640998800,              // Expiration timestamp
  aud: "your-client-id.apps.googleusercontent.com", // Audience (your app)
  iss: "accounts.google.com"     // Issuer
};

/**
 * How Google data maps to our User Model
 */
export const GOOGLE_TO_USER_MODEL_MAPPING = {
  // Direct mappings (Google → Our Model)
  "Google ID" → "googleId": {
    source: "profile.id",
    destination: "googleId",
    description: "Google's unique user identifier"
  },
  
  "Google Name" → "name": {
    source: "user.name",
    destination: "name", 
    description: "User's full name from Google"
  },
  
  "Google Email" → "email": {
    source: "user.email",
    destination: "email",
    description: "User's email address (required)"
  },
  
  "Google Email Verified" → "emailVerified": {
    source: "user.emailVerified",
    destination: "emailVerified",
    description: "Email verification timestamp"
  },
  
  "Google Image" → "image": {
    source: "user.image",
    destination: "image",
    description: "Profile picture URL"
  },
  
  "Google Locale" → "locale": {
    source: "profile.locale",
    destination: "locale",
    description: "User's locale preference"
  },
  
  // Our custom fields (not provided by Google)
  "Custom Role" → "role": {
    source: "N/A (our default)",
    destination: "role",
    description: "User role (user/admin/moderator)"
  },
  
  "Custom Status" → "status": {
    source: "N/A (our default)", 
    destination: "status",
    description: "Account status (active/inactive/suspended)"
  },
  
  "Custom Timestamps" → "createdAt/updatedAt": {
    source: "N/A (our generation)",
    destination: "createdAt/updatedAt",
    description: "Account creation and update timestamps"
  },
  
  "Custom Login Stats" → "lastLogin/loginCount": {
    source: "N/A (our tracking)",
    destination: "lastLogin/loginCount", 
    description: "Login statistics"
  },
  
  "Custom API Limits" → "apiKeysLimit/apiKeysUsed": {
    source: "N/A (our business logic)",
    destination: "apiKeysLimit/apiKeysUsed",
    description: "API key management limits"
  },
  
  "Custom Preferences" → "preferences": {
    source: "N/A (our defaults)",
    destination: "preferences",
    description: "User preferences and settings"
  }
};

/**
 * Example of how Google data gets processed in our signIn callback
 */
export const EXAMPLE_SIGNIN_PROCESSING = {
  // Step 1: Google sends this data
  googleData: {
    id: "123456789012345678901",
    name: "John Doe", 
    email: "john.doe@gmail.com",
    emailVerified: "2024-01-01T00:00:00.000Z",
    image: "https://lh3.googleusercontent.com/a/default-user"
  },
  
  // Step 2: Our createUserObject function processes it
  processedUser: {
    // From Google
    googleId: "123456789012345678901",
    name: "John Doe",
    email: "john.doe@gmail.com", 
    emailVerified: "2024-01-01T00:00:00.000Z",
    image: "https://lh3.googleusercontent.com/a/default-user",
    locale: "en-US",
    
    // Our defaults
    id: null, // Will be generated by database
    role: "user",
    status: "active", 
    lastLogin: null,
    loginCount: 0,
    apiKeysLimit: 10,
    apiKeysUsed: 0,
    preferences: {
      theme: "light",
      language: "en",
      notifications: { email: true, push: false },
      apiKeySettings: { defaultPermissions: ["read"], autoRotate: false, rotationPeriod: 30 }
    },
    createdAt: "2024-01-01T00:00:00.000Z",
    updatedAt: "2024-01-01T00:00:00.000Z",
    timezone: null
  }
};

/**
 * What data is available in different NextAuth.js callbacks
 */
export const CALLBACK_DATA_AVAILABILITY = {
  signIn: {
    user: "Google's processed user data",
    account: "OAuth account details (tokens, etc.)", 
    profile: "Raw Google profile data"
  },
  
  session: {
    session: "Current session object",
    user: "User data from database/token"
  },
  
  jwt: {
    token: "Current JWT token",
    user: "User data from database",
    account: "OAuth account details"
  }
};

/**
 * Complete data flow example
 */
export const COMPLETE_DATA_FLOW = {
  step1_googleResponse: {
    id: "123456789012345678901",
    name: "John Doe",
    email: "john.doe@gmail.com", 
    emailVerified: "2024-01-01T00:00:00.000Z",
    image: "https://lh3.googleusercontent.com/a/default-user"
  },
  
  step2_nextAuthProcessing: {
    // NextAuth.js adds provider info
    provider: "google",
    providerAccountId: "123456789012345678901"
  },
  
  step3_ourValidation: {
    // Our validateUserData function checks
    isValid: true,
    errors: []
  },
  
  step4_ourUserObject: {
    // Our createUserObject function creates
    googleId: "123456789012345678901",
    name: "John Doe",
    email: "john.doe@gmail.com",
    emailVerified: "2024-01-01T00:00:00.000Z", 
    image: "https://lh3.googleusercontent.com/a/default-user",
    role: "user",
    status: "active",
    // ... other fields with defaults
  },
  
  step5_sessionData: {
    // What gets passed to the client
    user: {
      id: "generated-uuid",
      name: "John Doe",
      email: "john.doe@gmail.com",
      image: "https://lh3.googleusercontent.com/a/default-user",
      role: "user",
      status: "active"
    }
  }
};

export default GOOGLE_TO_USER_MODEL_MAPPING; 